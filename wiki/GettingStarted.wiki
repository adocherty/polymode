#summary Installing and running the Polymode software

= Running Polymode on Windows =

== Installing ==

*Polymode* requires the *Python(x,y)* scientific Python environment to be installed. It is available from
http://www.pythonxy.com/

First download the *Python(x,y)* web installer available on the  [http://pythonxy.com/dl.php?file=windows/xyweb-1.0.3.exe Python(x,y) website], execute the installer to start.

Select the light version and _download_. The packages will be downloaded to your computer and the installation will begin.

http://polymode.googlecode.com/svn/wiki/figures/gs_selectversion.png

When the installer starts it will ask you to choose optional components. Make sure that you select either *All users* or *Just me* under the "Install for" option. If you select *Just me* then only you will be able to use Python(X,Y). 

http://polymode.googlecode.com/svn/wiki/figures/gs_installfor.png

After the installation is finished Polymode can be installed by running the Polymode installer.
[http://code.google.com/p/polymode/downloads/list Polymode website]

http://polymode.googlecode.com/svn/wiki/figures/gs_installfor.png

You now have everything you need to start.

== Using the Python Environment ==

The *IPython* command prompt is used to run all code.
This is installed with *Python(x,y)*, you can access it through the Windows Start Menu under
Python (x,y) -> Enhanced Consoles -> IPython(x,y) as shown below:

http://polymode.googlecode.com/svn/wiki/figures/gs_pythonxy.png

You can drag this icon to the main start menu to access it faster:

http://polymode.googlecode.com/svn/wiki/figures/gs_pythonxy_quick.png

<wiki:comment>
Both an editor *SciTE* and the *IPython* shell can be started using this command window, under the applications menu different applications can be selected and run. The most useful is *SciTE* which allows you to edit python files easily. You can run it selecting the tick button next to the menu.
From the "Interactive consoles" select *IPython(x,y)* and click the leftmost console button, as shown. This will start the IPython shell in a new window.
</wiki:comment>

In the IPython window you can change directories to where your code is using the `cd` command, `ls` will give you a list of files in the current directory.

The *tab* key can be used to auto-complete any partially completed commands. This can be helpful going through directories and running commands.

A python script file can be run by using the run command, to run a file named "ex1_materials.py" just enter:

{{{
In [1]: run ex1_materials
}}}

Also any command's help can be accessed by typing the command then a \u201c?\u201d afterwards, for example:

{{{
In [2]: sin? 
Type:           ufunc 
Base Class:     <type 'numpy.ufunc'> 
String Form:    <ufunc 'sin'> 
Namespace:      Interactive 
Docstring: 
    y = sin(x) sine elementwise. 
}}}

Some other useful commands are:

 * `ls`: List the files in the current directory
 * `pwd`: Return the current working directory path. 
 * `edit`: starts an editor and allows you to edit the file. After closing the window the file will be run.
 * `history`: Print input history with most recent last. 
 * `logstart`: Log an interactive session to a file
 * `quickref`: Show a quick reference sheet 
 * `rep`: Repeat previous input. 
 * `store`: Quickly store variables in a file
 * `whos`: List used variables in the workspace
 * `bookmark`: Bookmark a folder
 * `logon`/`logoff`: Logs interactive commands to a file

Help for all of these commands is available in IPython by typing the command then a "?" and hitting enter

== Paths in Windows ==

The *PATH* environment variable needs to be set correctly for *PythonXY* to run properly and find the required
programs. This is automatically set up when *PythonXY* is installed, however if another user wants to use the
same installation then each user needs to set up the environment variables

In particular the *PATH* variable should include these directories:
{{{
C:\Python25;C:\Python25\DLLs;C:\Python25\Scripts;C:\Python25\Lib\site-packages\PyQt4;C:\PythonXY\console;C:\PythonXY\SciTE-1.77.1
}}}

See the [http://support.microsoft.com/kb/310519 Microsoft support page] for information on how to change the path.

== Registry Entries in MPOF Computers ==

The MPOF computers do not respect the local system registry entries, to correct this download this registry file
and double click on it. Click "	yes" when asked if you want to add the information to the registry.

[http://polymode.googlecode.com/svn/misc/mpof_pythonxy_registry.reg Download Python(x,y) registry file]

== Installing on Linux/Mac OSX ==

Some prerequisites are required before Polymode can be installed. These are the python interpreter, an interactive python shell (IPython), numerical python (numpy and scipy) and the Matplotlib plotting library (matplotlib). These can be installed automatically on most linux distributions.

On Ubuntu execute the command:
{{{
sudo aptitude install ipython python-matplotlib python-numpy python-scipy
}}}

For Mac OS X the website http://trichech.us/?page_id=5 hosts an all-in one installer for all of the dependencies.

If these install correctly then Polymode can be installed using the command:
{{{
python setup_numpy.py install
}}}

This should build and install the package for you, if the prerequisites are also installed.

== Installing on the APAC Altix Cluster computers ==
Precompiled versions of the prerequisites for running computing jobs on the APAC Alitx cluster computers are included. Copy these files and the install file to the APAC computers and run the "install.sh" file. It will ask you for a directory and install the required files to it. You will need to add the some commands to your profile file to complete the installation, the installer will tell you what to add.
